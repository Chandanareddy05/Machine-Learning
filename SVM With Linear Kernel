import pandas as pd 
from sklearn.model_selection import train_test_split 
from sklearn.svm import SVC 
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report 
from sklearn.datasets import load_iris 
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt 

iris = load_iris() 
X = pd.DataFrame(iris.data, columns=iris.feature_names) 
y = pd.Series(iris.target) 

scaler = StandardScaler() 
X_scaled = scaler.fit_transform(X) 

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42) 

svm_model = SVC(kernel='linear', random_state=42) 
svm_model.fit(X_train, y_train) 

y_pred = svm_model.predict(X_test) 
accuracy = accuracy_score(y_test, y_pred) 
conf_matrix = confusion_matrix(y_test, y_pred) 
class_report = classification_report(y_test, y_pred) 
print(f'Accuracy: {accuracy:.2f}') 
print('Confusion Matrix:') 
print(conf_matrix) 
print('Classification Report:') 
print(class_report) 

new_sample = [[5.1, 3.5, 1.4, 0.2]] 
new_sample_scaled = scaler.transform(new_sample) 
new_sample_pred = svm_model.predict(new_sample_scaled) print('Predicted class for the new sample:', new_sample_pred) 
