import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn.datasets import load_iris
import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

iris = load_iris()
X = pd.DataFrame(iris.data, columns=iris.feature_names)
y = pd.Series(iris.target)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

cart_model = DecisionTreeClassifier(random_state=42)
cart_model.fit(X_train, y_train)


y_pred = cart_model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f'Accuracy: {accuracy:.2f}')
print('Confusion Matrix:')
print(conf_matrix)
print('Classification Report:')
print(class_report)

plt.figure(figsize=(20,10))
plot_tree(cart_model, filled=True, feature_names=iris.feature_names, class_names=iris.target_names)
plt.show()

pruned_cart_model = DecisionTreeClassifier(random_state=42, max_depth=3, min_samples_split=4, min_samples_leaf=2)
pruned_cart_model.fit(X_train, y_train)

y_pruned_pred = pruned_cart_model.predict(X_test)
pruned_accuracy = accuracy_score(y_test, y_pruned_pred)
pruned_conf_matrix = confusion_matrix(y_test, y_pruned_pred)
pruned_class_report = classification_report(y_test, y_pruned_pred)

print(f'Pruned Accuracy: {pruned_accuracy:.2f}')
print('Pruned Confusion Matrix:')
print(pruned_conf_matrix)
print('Pruned Classification Report:')
print(pruned_class_report)

plt.figure(figsize=(20,10))
plot_tree(pruned_cart_model, filled=True, feature_names=iris.feature_names, class_names=iris.target_names)
plt.show()
